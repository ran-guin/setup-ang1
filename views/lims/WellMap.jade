extends ./../customize/privateLayout
block content

  - Rows = ['A','B','C'];
  - Cols = [1,2,3,4]
  - targets = [];
  - config = { Sources : sources, Target : target, Options : options };
  - var init = "initialize(" + JSON.stringify(config) + ")";
  
  div.container
    div(ng-app='myApp')
      div(ng-controller="CommonController")
       div(ng-controller='WellController', ng-init="#{init}")
        if errorMsg 
          h2(style='color:red') Error: #{errorMsg}
        p &nbsp;
        b Fill By: 
        label
          input(type='radio' value = 'Row' ng-model="fill_by" ng-click="reset_fill_by()") 
          b &nbsp; Row &nbsp;
        label
          input(type='radio' value = 'Column' ng-model="fill_by" ng-click="reset_fill_by()")
          b &nbsp; Column &nbsp;

        hr
        b Transfer: 
        div
          input(type='text')
          span.lookup(id='Lookup-units' ng-init="loadLookup('units')")                  
        div        
          span.lookup(id='Lookup-Plate_Format' ng-init="loadLookup('Plate_Format', 'Plate_Format_ID', 'Plate_Format_Type')") 
          b &nbsp; Split X: 
          input(name='split' type='text' size='5px')

        hr
        h3 Source List: {{ sources.length }}
        b {{ sources }} 
        h4 Samples: {{ sources[0] }}, {{ sources[1] }} ...{{ sources[sources.length-1] }}
        hr
        h4 Target: {{ target }}
        hr
        h5 Options: {{ options }}
        hr
        button(type='button' ng-click="redistribute()") Distribute
        span &nbsp; &nbsp;
        button(type='button' ng-click="redistribute()") Re-Distribute
        span &nbsp; &nbsp;
        button(type='button' ng-click="source_by_Col()") Pick Columns First
        span &nbsp; &nbsp;
        button(type='button' ng-click="source_by_Row()") Pick Rows First
        span &nbsp; &nbsp;
        button(type='button' ng-click="reset_sources()") Reset Source Order
        hr
        button.btn.btn-primary(type='button' ng-click="testXfer()") Complete Transfer
        span &nbsp; &nbsp;
        hr
        b {{ feedback }}
        hr

        - var index = 0;
        table.table()
          tr
            td(style='width:50%')
              h2 Source Samples:
              table
                tr
                  th &nbsp;
                  th(ng-repeat="col in source_cols") {{ col }}
                tr(ng-repeat="row in source_rows")
                  td {{ row }}
                  td(ng-repeat="col in source_cols" style="background-color:#{{ rgbList[ $parent.$index*source_cols.length + $index ] }}" ) 
                    span(data-toggle="tooltip" title="{{sources[$parent.$index*source_cols.length + $index].id}}") &nbsp; &nbsp; &nbsp;
            td(style='width:50%')
              h2 Target Samples:

              - var i = 0;
              each plate in targets
                table.table.table-bordered
                  tr
                    th &nbsp;
                    each col in Cols
                      th(style='background-color:#aaa') 
                        b #{col}
                  each row in Rows
                    tr
                      td(style='background-color:#aaa') 
                        b #{row}
                      each col in Cols
                        td 
                          - index = plate + ':' + row + col
                            if plateMap[index]
                              b #{plateMap[index]} 
                            else 
                              b 0

        hr
        //b {{ map }}
        b Colour Map:

        b {{ colours.length }} colours:

        table.table.table-bordered
          tr(ng-repeat="colour in colours") 
              td(ng-repeat="hue in colourMap[colour]" style="background-color:#" + "{{hue}}" ) {{hue}}

        hr
        b {{ sources }}
