extends ./../customize/privateLayout

block content

  div.container
    
    // input variables: 
    //    - plate_ids  (array); 
    //    - Samples    (array of hashes)
    //    - Steps      (array of hashes)
    //    - attributes (array of hashes)

    - var configParams = { protocol: protocol, plate_ids: plate_ids, plate_set: plate_set, Samples: Samples, Steps : Steps, Attributes: attributes, last_step: last_step, backfill_date: backfill_date};
  
    - var init_options = { distribute : 1 };
    - var initP = "initialize(" + JSON.stringify(configParams) + ")";    
    - var initW = "initialize(" + JSON.stringify(configParams) + ',' + JSON.stringify(init_options) + ")";    

    //- flds = fields || []; 
    //- units = { 'solution_qty' : 'solution_qty_units', 'transfer_qty' : 'transfer_qty_units'};
    - aliases = { 'equipment' : 'Equip', 'solution' : 'Sol' }
    - attributes = attributes || {}; // {'Thaw_Time' : 'integer' }

    div(ng-app='myApp' ng-cloak=1)
      div(ng-controller="SharedController")
       div(ng-controller="FancyFormController")
        div(ng-controller="LIMSController")
          div(ng-controller="WellMapperController" ng-init="#{initW}")
            div(ng-controller='ProtocolController' ng-init="#{initP}" ngcloak)
              
              h3 {{ active.protocol.name }}
                div.navbar-right Sample Set: # {{ active.plate_set }}
              include ActiveSamples.jade
              
              br 
              include ./../core/errorAngularMsg.jade
              br

              div(ng-show="protocol.status != 'Completed'")      
                h2 {{ protocol.name }}

                each Step,index in Steps
                  - var Snum = index+1;
             
                    div(ng-show="#{Snum} == step.stepNumber")
                      - var flds = [];
                      if (Step.input_options) 
                        - flds = Step.input_options.split(':')

                      - var formats = [];
                      if (Step.input_format) 
                        - formats = Step.input_format.split(':')

                      - var defaults = [];
                      if (Step.input_defaults) 
                        - defaults = Step.input_defaults.split(':')

                      - var prompted = {};

                      div.alert.alert-info(style='opacity:0.9')
                        h3 #{Step.name} &nbsp; 
                          span.navbar-right
                            if Step.instructions
                              a(href='#' onclick="return false;" tooltip='instructions' data-toggle="popover" data-placement="left" data-trigger="focus" title="Instructions" data-content="#{Step.instructions}")
                                i.fa.fa-question-circle
                              span &nbsp;
                            span &nbsp; [ {{ step.stepNumber }} / {{ protocol.steps }} ] &nbsp;

                        h4(style="color:red") &nbsp; &nbsp; #{ Step.message } 

                        hr

                        div(ng-if='errMsg')
                          div.alert.alert-danger(style='opacity:1')
                            b {{ errMsg }} 

                        form.form-horizontal(role="form" name ="form#{Snum}" method='post' ng-submit="complete('Completed')")
                          input(type = 'hidden' name='Samples' value='{{ active.Samples }}')
                          input(type='hidden' id = 'id' name='plate_ids' value="{{ active.plate_list }}")
                          input(type='hidden' id='Plate_ID' name='Plate_ID' value='{{active.plate_list}}')

                          div(ng-if="ListTracking#{Snum}")
                            // Show example for handling input lists //
                            div.form-group.input-lg
                              div.col-sm-2.control-label Expand Lists:
                              div.col-sm-4
                                label.btn.btn-default(type='radio' ng-model="list_mode#{Snum}" uib-btn-radio = 'serial' ng-click="reset_list_mode('serial')") 
                                  b(ng-show="list_mode == 'serial'") &nbsp; Serially &nbsp;
                                  span(ng-show="list_mode !== 'serial'") &nbsp; Serially &nbsp;
                                label.btn.btn-default(type='radio'  ng-model="list_mode#{Snum}" uib-btn-radio='parallel' ng-click="reset_list_mode('parallel')")
                                  b(ng-show="list_mode == 'parallel'") &nbsp; In Parallel &nbsp;
                                  span(ng-show="list_mode !== 'parallel'") &nbsp; In Parallel &nbsp;
                                

                              div.col-sm-4
                                span &nbsp; [ eg : 
                                  b(ng-show="listExample") {{ listExample }}
                                  b(ng-show="!listExample") awaiting selection...
                                  span ]                                      

                          each field,i in flds
                            span &nbsp; 
                            - fld = field.replace('*','');
                            if fld && fld.length
                              - alias = aliases[fld] || fld;
                              - fType = 'text';
                              - mandatory = false;
                              - pattern = formats[i];
                              - def     = defaults[i];

                              if attributes[alias]
                                - fType = attributes[alias].type || 'text'
                                if fType === 'Count'
                                  - fType = 'hidden'

                              if (fld != field)
                                - mandatory = true;
                                - pattern = "^[\\S]{1,}$"; 

                              - alias = alias.replace(/\_/g, ' ');
                              - var execute = "reload(); validate_prep_form('" + fld + Snum + "')";

                              if fType === 'hidden' 
                                input(type='hidden' name='#{fld}#{Snum}' id='#{fld}#{Snum}' ng-model='form.#{fld}#{Snum}' force=1)
                              else if fType.match(/ENUM/i)
                                div.form-group.input-lg
                                  label.col-sm-2.control-label(for="#{fld}#{Snum}") #{alias}
                                  div.col-sm-6
                                    my-dropdown(placeholder="#{alias}" list="MenuList['form.#{fld}#{Snum}']" selected="form.#{fld}#{Snum}" property="name" track='name' default="#{def}" ng-click="#{execute}" ng-init="setup_Menu('form.#{fld}#{Snum}', \"#{fType}\",'','#{def}')")
                                  div.col-sm-4 &nbsp; 
                              else if fld.match(/^(location|solution|equipment)/) 
                                // these input options do not have cut/paste options ... and wait for blur to trigger validation....
                                div.form-group.input-lg
                                  label.col-sm-2.control-label(for='#{fld}#{Snum}') #{alias}
                                  div.col-sm-6
                                    div.input-group
                                      input.form-control(type='#{fType}' name="#{fld}#{Snum}" ng-required="#{mandatory}" placeholder = "-- Enter #{alias} --" id='#{fld}#{Snum}' ng-model='form.#{fld}#{Snum}' ng-model-options="{debounce : 1000}" default='#{def}' force=1 data-error="You must enter a valid quantity" ng-blur="update_splitField('#{fld}#{Snum}');" ng-show="!cut.#{fld}#{Snum}" aria-describedby='expand#{fld}#{Snum}')

                              else 
                                div.form-group.input-lg
                                  label.col-sm-2.control-label(for='#{fld}#{Snum}') #{alias}
                                  div.col-sm-6
                                    div.input-group
                                      input.form-control(type='#{fType}' name="#{fld}#{Snum}" ng-required="#{mandatory}" placeholder = "-- Enter #{alias} --" id='#{fld}#{Snum}' ng-model='form.#{fld}#{Snum}' ng-model-options="{debounce : 1000}" default='#{def}' force=1 data-error="You must enter a valid quantity" ng-change="update_splitField('#{fld}#{Snum}');" ng-show="!cut.#{fld}#{Snum}" aria-describedby='expand#{fld}#{Snum}')
                                      
                                      span.input-group-addon(id="expand#{fld}#{Snum}" ng-show="!cut.#{fld}#{Snum}")
                                        a(href="/" ng-click="cut.#{fld}#{Snum} = 1" onclick="return false" data-toggle='tooltip' title="Expand to enable paste<BR>(eg from excel spreadsheet)" data-html='true')
                                          i.fa.fa-expand

                                    div.input-group
                                      textarea.form-control( rows="{{N}}" ng-show="cut.#{fld}#{Snum}" placeholder="Paste #{alias}" ng-model="paste.#{fld}#{Snum}" ng-blur="pasteData('#{fld}#{Snum}'); form.#{fld}#{Snum} = cutpaste.#{fld}#{Snum}; splitField('#{fld}#{Snum}')" aria-describedby="compress#{fld}#{Snum}" data-toggle='tooltip' title='paste list of values here<BR><B>One value per line</B>' data-html='true')

                                      span.input-group-addon(id="compress#{fld}#{Snum}" ng-show="cut.#{fld}#{Snum}") &nbsp;
                                        a(href="/" ng-click="cut.#{fld}#{Snum} = 0" onclick="return false" data-toggle='tooltip' title='convert to comma-delimited list')
                                          i.fa.fa-compress

                                    div.help-block.with-errors(style='color:red' ng-show="form#{Snum}.#{fld}#{Snum}.$invalid" ng-model="form.#{fld}#{Snum}_errors") #{alias} is Mandatory
                                  
                                  if fld.match(/_qty/)
                                    div.col-sm-4
                                      - units = [ { name: 'ml'}, { name: 'ul'}]      
                                      my-dropdown(id='#{fld}_units#{Snum}' placeholder='units..' list="MenuList['form.#{fld}_units#{Snum}']" selected="form.#{fld}_units#{Snum}" property='name' track='name' ng-click="validate_prep_form('#{fld}_units#{Snum}');" ng-init="setup_Menu('form.#{fld}_units#{Snum}','ml,ul,nl')") 
                                      
                                  if ! fld.match(/_qty/)
                                    div.col-sm-4 &nbsp;

                          hr
                          div.form-group
                            div.col-sm-1 &nbsp;
                            div.col-sm-3

                              button.btn.btn-success(type='submit' ng-click="updateLookups()" ng-disabled="invalidate_form") Completed Step
                              span &nbsp;
                              a(href='#' onclick='return false;')
                                button.btn.btn-xs(ng-show="invalidate_form" type='button' ng-click="validate_prep_form(null, {force:true})")
                                  i.fa.fa-warning
                            div.col-sm-2
                              button.btn.btn-warning(type='button' ng-click="complete('Skipped')") Skip Step
                            div.col-sm-2
                              button.btn.btn-danger(type='button' ng-click="complete('Failed')") Failed Step
                            div.col-sm-2
                              button.btn.btn-primary(type='button' ng-click="repeat()" ng-disable="Step.Repeatable") Repeat Previous Step
                          hr
                          button.btn.btn-danger(type='button' ng-click="reset_messages(); exitThisProtocol()") Exit Protocol Now             
                hr

                div(ng-if="Custom_Options && Custom_Options.transfer_type")
                  
                  div(ng-show="!showMap")
                    button.btn-lg.btn-primary(type='button' ng-click="validate_prep_form(); showMap=1;") Show Distribution Map

                  div(ng-show="showMap")
                    button.btn-lg.btn-danger(type='button' ng-click="showMap=0") Hide Distribution Map
                    hr
                    div.col-md-6
                      b Source:
                      include SourceMap.jade
                    div.col-md-6
                      b Target:
                      include TargetMap.jade
                    hr

              div(ng-show="protocol.status == 'Completed'")
                include ContainerOptions.jade 
                include uploadMatrix.jade
                hr

              p &nbsp;
              p &nbsp;
              div.alert.alert-danger(ng-if="debug") 
                br
                h3 Debugging

                b custom: {{ Custom_Options }}
                hr
                h5 Step: {{ Step }}
                hr

                b comment: {{ comments }}
                h5 Defaults: {{ Default }}
                h5 Att : {{ AttributePrompt }}
                h5 Steps : {{ Steps }}
                h5 ids: {{ active.plate_ids }}
                h5 Samples: {{ active.Samples }}
                h5 Input: {{ input }}
                h5 Show: {{ Show }}
                h5 Fields: #{ JSON.stringify(flds) }
                h5 Attributes: #{JSON.stringify(attributes)}

                hr
                b #{sails.config.payload}
                b #{ JSON.stringify(sails.config.payload) }

                hr
                b Config Messages:
                br
                b #{sails.config.messages}
                h3 angular messages: 
                b {{ messages }}
